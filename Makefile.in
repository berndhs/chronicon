
# Makefile for chronicon
#

#/****************************************************************
# * This file is distributed under the following license:
# *
# * Copyright (C) 2010, Bernd Stramm
# *
# *  This program is free software; you can redistribute it and/or
# *  modify it under the terms of the GNU General Public License
# *  as published by the Free Software Foundation; either version 2
# *  of the License, or (at your option) any later version.
# *
# *  This program is distributed in the hope that it will be useful,
# *  but WITHOUT ANY WARRANTY; without even the implied warranty of
# *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# *  GNU General Public License for more details.
# *
# *  You should have received a copy of the GNU General Public License
# *  along with this program; if not, write to the Free Software
# *  Foundation, Inc., 51 Franklin Street, Fifth Floor, 
# *  Boston, MA  02110-1301, USA.
# ****************************************************************/
#

TARGETS = bin/chronicon
PRO_FILE = chrontop.pro
DEBUG_SUBS = chronicon
NODEBUG_SUBS = qoauth
MAKEFILE = MakeChron
TOP_MAKEFILE = Makefile
HELP_HTML = helpman.html
HELP_TXT = helpman.txt


# Note that a copy of the manual is embedded in the program, so to update the 
# executable completely, the manual needs to be made first

all: manual program

program: $(MAKEFILE)
	$(MAKE) -f $(MAKEFILE) all

clean: $(MAKEFILE) FORCE
	$(MAKE) -f $(MAKEFILE) clean

distclean: $(MAKEFILE) FORCE
	$(MAKE) -f $(MAKEFILE) distclean
	rm -f $(MAKEFILE)
	rm -f $(TOP_MAKEFILE)
	@echo
	@echo "Run ./configure to re-create the Makefile"
	@echo

manual:	docs/$(HELP_HTML) chronicon/docu/$(HELP_HTML)

dox:
	doxygen  Doxyfile

chronicon/docu/$(HELP_HTML): docs/$(HELP_HTML)
	cp docs/$(HELP_HTML) chronicon/docu/$(HELP_HTML)

docs/$(HELP_HTML): docs/$(HELP_TXT)
	cd docs; asciidoc $(HELP_TXT)
	
debug: $(MAKEFILE) FORCE
	for D in $(NODEBUG_SUBS) ; do \
	   cd $$D; $(MAKE) -f $(MAKEFILE); \
	   done
	for D in $(DEBUG_SUBS) ; do \
	   cd $$D; $(MAKE) -f $(MAKEFILE) debug ; \
	   done


release: $(MAKEFILE) FORCE
	for D in $(NODEBUG_SUBS) ; do \
	   cd $$D; $(MAKE) -f $(MAKEFILE); \
	   done
	for D in $(DEBUG_SUBS) ; do \
	   cd $$D; $(MAKE) -f $(MAKEFILE) release ; \
	   done

install: all FORCE
	install -m 0755 -p $(TARGETS) $(DESTDIR)

qmake: 
	$(QMAKE) $(PRO_FILE) -o $(MAKEFILE)

$(MAKEFILE): $(PRO_FILE)
	$(QMAKE) $(PRO_FILE) -o $(MAKEFILE)

FORCE:

